server:
  port: 0

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
  instance:
    instance-id: ${spring.application.name}:${random.uuid}

spring:
  application:
    name: search-registry-service
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
  data:
    mongodb:
      uri: mongodb+srv://auth-server:ki6bn3QrQVbAbPph@cluster0.6xdtq.mongodb.net/nolis
      database: nolis
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: "my_group_id_1"
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "*"
    producer:
        bootstrap-servers: localhost:9092
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
